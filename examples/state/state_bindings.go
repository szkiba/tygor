// Code generated by tygor; DO NOT EDIT.

package state

import (
	"errors"
	"fmt"
	"github.com/dop251/goja"
	"go.k6.io/k6/js/modules"
	"time"
)

// k6Module represents k6 JavaScript extension module.
type k6Module struct {
	goModuleConstructor goModuleConstructor
}

// NewModuleInstance creates new per VU module instance.
func (m *k6Module) NewModuleInstance(vu modules.VU) modules.Instance {
	mi := new(k6ModuleInstance)
	adaptee := m.goModuleConstructor(vu)
	adapter := jsModuleFrom(adaptee)

	vm := vu.Runtime()

	dict := make(map[string]interface{})

	mi.exports.Named = dict

	obj := vm.NewObject()

	if err := obj.DefineAccessorProperty("activeVUs", vm.ToValue(adapter.activeVUsGetter), goja.Undefined(), goja.FLAG_FALSE, goja.FLAG_TRUE); err != nil {
		panic(err)
	}

	if err := obj.DefineAccessorProperty("iteration", vm.ToValue(adapter.iterationGetter), goja.Undefined(), goja.FLAG_FALSE, goja.FLAG_TRUE); err != nil {
		panic(err)
	}

	if err := obj.DefineAccessorProperty("vuID", vm.ToValue(adapter.vuIDGetter), goja.Undefined(), goja.FLAG_FALSE, goja.FLAG_TRUE); err != nil {
		panic(err)
	}

	if err := obj.DefineAccessorProperty("vuIDFromRuntime", vm.ToValue(adapter.vuIDFromRuntimeGetter), goja.Undefined(), goja.FLAG_FALSE, goja.FLAG_TRUE); err != nil {
		panic(err)
	}

	mi.exports.Default = obj

	return mi
}

// register registers k6 JavaScript extension module.
func register(ctor goModuleConstructor) {
	m := new(k6Module)
	m.goModuleConstructor = ctor
	modules.Register("k6/x/state", m)
}

// k6ModuleInstance represents per VU module instance.
type k6ModuleInstance struct {
	exports modules.Exports
}

// Exports returns exported symbols.
func (mi *k6ModuleInstance) Exports() modules.Exports {
	return mi.exports
}

// jsModule is the go binding for the JavaScript Module type.
type jsModule interface {
	// activeVUsGetter is the go getter binding for the JavaScript activeVUs property.
	activeVUsGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value

	// iterationGetter is the go getter binding for the JavaScript iteration property.
	iterationGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value

	// vuIDGetter is the go getter binding for the JavaScript vuID property.
	vuIDGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value

	// vuIDFromRuntimeGetter is the go getter binding for the JavaScript vuIDFromRuntime property.
	vuIDFromRuntimeGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value
}

// jsModuleAdapter converts goModule to jsModule.
type jsModuleAdapter struct {
	adaptee goModule
}

var _ jsModule = (*jsModuleAdapter)(nil)

// activeVUsGetter is a jsModule property getter adapter method.
func (self *jsModuleAdapter) activeVUsGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value {
	v, err := self.adaptee.activeVUsGetter()
	if err != nil {
		panic(err)
	}

	return vm.ToValue(v)
}

// iterationGetter is a jsModule property getter adapter method.
func (self *jsModuleAdapter) iterationGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value {
	v, err := self.adaptee.iterationGetter()
	if err != nil {
		panic(err)
	}

	return vm.ToValue(v)
}

// vuIDGetter is a jsModule property getter adapter method.
func (self *jsModuleAdapter) vuIDGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value {
	v, err := self.adaptee.vuIDGetter()
	if err != nil {
		panic(err)
	}

	return vm.ToValue(v)
}

// vuIDFromRuntimeGetter is a jsModule property getter adapter method.
func (self *jsModuleAdapter) vuIDFromRuntimeGetter(call goja.FunctionCall, vm *goja.Runtime) goja.Value {
	v, err := self.adaptee.vuIDFromRuntimeGetter()
	if err != nil {
		panic(err)
	}

	return vm.ToValue(v)
}

// jsModuleFrom returns a jsModule based on a goModule.
func jsModuleFrom(adaptee goModule) jsModule {
	return &jsModuleAdapter{adaptee: adaptee}
}

// goModule is the go representation of the JavaScript Module type.
type goModule interface {
	// activeVUsGetter is the go getter method for the activeVUs property.
	activeVUsGetter() (int64, error)

	// iterationGetter is the go getter method for the iteration property.
	iterationGetter() (int64, error)

	// vuIDGetter is the go getter method for the vuID property.
	vuIDGetter() (uint64, error)

	// vuIDFromRuntimeGetter is the go getter method for the vuIDFromRuntime property.
	vuIDFromRuntimeGetter() (int64, error)
}

// goModuleConstructor creates new goModule instance.
type goModuleConstructor func(vu modules.VU) goModule

func goTimeFromDate(v goja.Value, vm *goja.Runtime) time.Time {
	getTime, ok := goja.AssertFunction(v.ToObject(vm).Get("getTime"))
	if !ok {
		panic(fmt.Errorf("%w: getTime", errors.ErrUnsupported))
	}

	ret, err := getTime(v)
	if err != nil {
		panic(err)
	}

	return time.UnixMilli(ret.ToInteger())
}

func jsDateFromTime(t time.Time, vm *goja.Runtime) goja.Value {
	d, err := vm.New(vm.Get("Date"), vm.ToValue(t.UnixMilli()))
	if err != nil {
		panic(err)
	}

	return d
}
